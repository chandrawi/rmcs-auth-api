syntax = "proto3";
package token;

service TokenService {
    rpc ReadRefreshToken(RefreshId) returns (TokenReadResponse);

    rpc ListAccessToken(AccessId) returns (TokenListResponse);

    rpc ListTokenByUser(UserId) returns (TokenListResponse);

    rpc CreateRefreshToken(TokenSchema) returns (TokenCreateResponse);

    rpc CreateAccessToken(TokenSchema) returns (TokenCreateResponse);

    rpc DeleteRefreshToken(RefreshId) returns (TokenChangeResponse);

    rpc DeleteAccessToken(AccessId) returns (TokenChangeResponse);

    rpc DeleteTokenByUser(UserId) returns (TokenChangeResponse);
}

message TokenSchema {
    string refresh_id = 1;
    uint32 access_id = 2;
    uint32 user_id = 3;
    int64 expire = 4;
    bytes ip = 5;
}

message RefreshId {
    string refresh_id = 1;
}

message AccessId {
    uint32 access_id = 1;
}

message UserId {
    uint32 user_id = 1;
}

enum ResponseStatus {
    FAILED = 0;
    SUCCESS = 1;
}

message TokenReadResponse {
    TokenSchema result = 1;
    ResponseStatus status = 2;
}

message TokenListResponse {
    repeated TokenSchema result = 1;
    ResponseStatus status = 2;
}

message TokenCreateResponse {
    string refresh_id = 1;
    uint32 access_id = 2;
    ResponseStatus status = 3;
}

message TokenChangeResponse {
    ResponseStatus status = 1;
}

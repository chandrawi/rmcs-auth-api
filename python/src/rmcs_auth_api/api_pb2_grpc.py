# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import api_pb2 as api__pb2


class ApiServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ReadApi = channel.unary_unary(
                '/api.ApiService/ReadApi',
                request_serializer=api__pb2.ApiId.SerializeToString,
                response_deserializer=api__pb2.ApiReadResponse.FromString,
                )
        self.ReadApiByName = channel.unary_unary(
                '/api.ApiService/ReadApiByName',
                request_serializer=api__pb2.ApiName.SerializeToString,
                response_deserializer=api__pb2.ApiReadResponse.FromString,
                )
        self.ListApiByCategory = channel.unary_unary(
                '/api.ApiService/ListApiByCategory',
                request_serializer=api__pb2.ApiCategory.SerializeToString,
                response_deserializer=api__pb2.ApiListResponse.FromString,
                )
        self.CreateApi = channel.unary_unary(
                '/api.ApiService/CreateApi',
                request_serializer=api__pb2.ApiSchema.SerializeToString,
                response_deserializer=api__pb2.ApiCreateResponse.FromString,
                )
        self.UpdateApi = channel.unary_unary(
                '/api.ApiService/UpdateApi',
                request_serializer=api__pb2.ApiUpdate.SerializeToString,
                response_deserializer=api__pb2.ApiChangeResponse.FromString,
                )
        self.DeleteApi = channel.unary_unary(
                '/api.ApiService/DeleteApi',
                request_serializer=api__pb2.ApiId.SerializeToString,
                response_deserializer=api__pb2.ApiChangeResponse.FromString,
                )
        self.ReadProcedure = channel.unary_unary(
                '/api.ApiService/ReadProcedure',
                request_serializer=api__pb2.ProcedureId.SerializeToString,
                response_deserializer=api__pb2.ProcedureReadResponse.FromString,
                )
        self.ReadProcedureByName = channel.unary_unary(
                '/api.ApiService/ReadProcedureByName',
                request_serializer=api__pb2.ProcedureName.SerializeToString,
                response_deserializer=api__pb2.ProcedureReadResponse.FromString,
                )
        self.ListProcedureByApi = channel.unary_unary(
                '/api.ApiService/ListProcedureByApi',
                request_serializer=api__pb2.ApiId.SerializeToString,
                response_deserializer=api__pb2.ProcedureListResponse.FromString,
                )
        self.CreateProcedure = channel.unary_unary(
                '/api.ApiService/CreateProcedure',
                request_serializer=api__pb2.ProcedureSchema.SerializeToString,
                response_deserializer=api__pb2.ProcedureCreateResponse.FromString,
                )
        self.UpdateProcedure = channel.unary_unary(
                '/api.ApiService/UpdateProcedure',
                request_serializer=api__pb2.ProcedureUpdate.SerializeToString,
                response_deserializer=api__pb2.ProcedureChangeResponse.FromString,
                )
        self.DeleteProcedure = channel.unary_unary(
                '/api.ApiService/DeleteProcedure',
                request_serializer=api__pb2.ProcedureId.SerializeToString,
                response_deserializer=api__pb2.ProcedureChangeResponse.FromString,
                )


class ApiServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ReadApi(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadApiByName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListApiByCategory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateApi(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateApi(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteApi(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadProcedure(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadProcedureByName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListProcedureByApi(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateProcedure(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProcedure(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteProcedure(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ApiServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ReadApi': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadApi,
                    request_deserializer=api__pb2.ApiId.FromString,
                    response_serializer=api__pb2.ApiReadResponse.SerializeToString,
            ),
            'ReadApiByName': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadApiByName,
                    request_deserializer=api__pb2.ApiName.FromString,
                    response_serializer=api__pb2.ApiReadResponse.SerializeToString,
            ),
            'ListApiByCategory': grpc.unary_unary_rpc_method_handler(
                    servicer.ListApiByCategory,
                    request_deserializer=api__pb2.ApiCategory.FromString,
                    response_serializer=api__pb2.ApiListResponse.SerializeToString,
            ),
            'CreateApi': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateApi,
                    request_deserializer=api__pb2.ApiSchema.FromString,
                    response_serializer=api__pb2.ApiCreateResponse.SerializeToString,
            ),
            'UpdateApi': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateApi,
                    request_deserializer=api__pb2.ApiUpdate.FromString,
                    response_serializer=api__pb2.ApiChangeResponse.SerializeToString,
            ),
            'DeleteApi': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteApi,
                    request_deserializer=api__pb2.ApiId.FromString,
                    response_serializer=api__pb2.ApiChangeResponse.SerializeToString,
            ),
            'ReadProcedure': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadProcedure,
                    request_deserializer=api__pb2.ProcedureId.FromString,
                    response_serializer=api__pb2.ProcedureReadResponse.SerializeToString,
            ),
            'ReadProcedureByName': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadProcedureByName,
                    request_deserializer=api__pb2.ProcedureName.FromString,
                    response_serializer=api__pb2.ProcedureReadResponse.SerializeToString,
            ),
            'ListProcedureByApi': grpc.unary_unary_rpc_method_handler(
                    servicer.ListProcedureByApi,
                    request_deserializer=api__pb2.ApiId.FromString,
                    response_serializer=api__pb2.ProcedureListResponse.SerializeToString,
            ),
            'CreateProcedure': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateProcedure,
                    request_deserializer=api__pb2.ProcedureSchema.FromString,
                    response_serializer=api__pb2.ProcedureCreateResponse.SerializeToString,
            ),
            'UpdateProcedure': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProcedure,
                    request_deserializer=api__pb2.ProcedureUpdate.FromString,
                    response_serializer=api__pb2.ProcedureChangeResponse.SerializeToString,
            ),
            'DeleteProcedure': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteProcedure,
                    request_deserializer=api__pb2.ProcedureId.FromString,
                    response_serializer=api__pb2.ProcedureChangeResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.ApiService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ApiService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ReadApi(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.ApiService/ReadApi',
            api__pb2.ApiId.SerializeToString,
            api__pb2.ApiReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadApiByName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.ApiService/ReadApiByName',
            api__pb2.ApiName.SerializeToString,
            api__pb2.ApiReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListApiByCategory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.ApiService/ListApiByCategory',
            api__pb2.ApiCategory.SerializeToString,
            api__pb2.ApiListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateApi(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.ApiService/CreateApi',
            api__pb2.ApiSchema.SerializeToString,
            api__pb2.ApiCreateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateApi(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.ApiService/UpdateApi',
            api__pb2.ApiUpdate.SerializeToString,
            api__pb2.ApiChangeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteApi(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.ApiService/DeleteApi',
            api__pb2.ApiId.SerializeToString,
            api__pb2.ApiChangeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadProcedure(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.ApiService/ReadProcedure',
            api__pb2.ProcedureId.SerializeToString,
            api__pb2.ProcedureReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadProcedureByName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.ApiService/ReadProcedureByName',
            api__pb2.ProcedureName.SerializeToString,
            api__pb2.ProcedureReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListProcedureByApi(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.ApiService/ListProcedureByApi',
            api__pb2.ApiId.SerializeToString,
            api__pb2.ProcedureListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateProcedure(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.ApiService/CreateProcedure',
            api__pb2.ProcedureSchema.SerializeToString,
            api__pb2.ProcedureCreateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateProcedure(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.ApiService/UpdateProcedure',
            api__pb2.ProcedureUpdate.SerializeToString,
            api__pb2.ProcedureChangeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteProcedure(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.ApiService/DeleteProcedure',
            api__pb2.ProcedureId.SerializeToString,
            api__pb2.ProcedureChangeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
